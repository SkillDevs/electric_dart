diff -x lux -x satellite_client -x lux_logs -ur electric/common.mk dart/common.mk
--- electric/common.mk	2023-09-20 00:59:33.950067773 +0200
+++ dart/common.mk	2023-09-26 15:25:57.944480733 +0200
@@ -31,6 +31,16 @@
 	export ELECTRIC_CLIENT_IMAGE=${ELECTRIC_CLIENT_IMAGE_NAME}:${ELECTRIC_IMAGE_TAG}
 endif
 
+export ELECTRIC_COMMIT:=$(shell cd $(PROJECT_ROOT) && tool/extract_electric_commit.sh)
+
+export ELECTRIC_REPO := $(abspath $(E2E_ROOT)/electric_repo)
+
+clone_electric:
+	git clone https://github.com/electric-sql/electric ${ELECTRIC_REPO} || true
+	cd ${ELECTRIC_REPO} && \
+	git fetch origin && \
+	git checkout --force ${ELECTRIC_COMMIT}
+
 lux: ${LUX}
 
 ${LUX}:
Only in dart: electric_repo
diff -x lux -x satellite_client -x lux_logs -ur electric/elixir_client/Makefile dart/elixir_client/Makefile
--- electric/elixir_client/Makefile	2023-09-20 00:59:33.950067773 +0200
+++ dart/elixir_client/Makefile	2023-09-20 00:55:00.711148701 +0200
@@ -7,7 +7,7 @@
 export DOCKER_REPO ?= europe-docker.pkg.dev/vaxine/ci
 export ELECTRIC_CLIENT_IMAGE_NAME ?= electric-ws-client
 
-ELECTRIC_DIR=${PROJECT_ROOT}/components/electric
+ELECTRIC_DIR=${ELECTRIC_REPO}/components/electric
 
 build:
 	make -C ${ELECTRIC_DIR} docker-build-ws-client
diff -x lux -x satellite_client -x lux_logs -ur electric/.gitignore dart/.gitignore
--- electric/.gitignore	2023-09-20 00:59:33.950067773 +0200
+++ dart/.gitignore	2023-09-20 00:55:00.711148701 +0200
@@ -4,3 +4,4 @@
 lux_logs
 .pull
 .sysbench_docker_build
+electric_repo
\ No newline at end of file
diff -x lux -x satellite_client -x lux_logs -ur electric/Makefile dart/Makefile
--- electric/Makefile	2023-09-20 00:59:33.950067773 +0200
+++ dart/Makefile	2023-09-20 00:55:00.711148701 +0200
@@ -1,6 +1,7 @@
 include common.mk
 
 deps: lux
+	make clone_electric
 	make -C satellite_client build
 	make -C elixir_client build
 
diff -x lux -x satellite_client -x lux_logs -ur electric/services_templates.yaml dart/services_templates.yaml
--- electric/services_templates.yaml	2023-09-20 00:59:33.951067777 +0200
+++ dart/services_templates.yaml	2023-09-20 16:36:33.961041746 +0200
@@ -40,7 +40,7 @@
       - "host.docker.internal:host-gateway"
 
   satellite_client:
-    image: "satellite_client:local"
+    image: "satellite_dart_client:local"
     environment:
       AUTH_JWT_ALG: HS256
       AUTH_JWT_KEY: integration-tests-signing-key-example
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/03.03_node_satellite_sends_and_recieves_data.lux dart/tests/03.03_node_satellite_sends_and_recieves_data.lux
--- electric/tests/03.03_node_satellite_sends_and_recieves_data.lux	2023-09-20 00:59:33.952067780 +0200
+++ dart/tests/03.03_node_satellite_sends_and_recieves_data.lux	2023-09-20 16:36:33.961041746 +0200
@@ -36,10 +36,10 @@
 
 [invoke log "Verify that satellite inserts reached each other"]
 [shell satellite_1]
-    [invoke wait-for "await client.get_items(db)" "hello from satellite_2" 10 $node]
+    [invoke wait-for "get_items db" "hello from satellite_2" 10 $node]
 
 [shell satellite_2]
-    [invoke wait-for "await client.get_items(db)" "hello from satellite_1" 10 $node]
+    [invoke wait-for "get_items db" "hello from satellite_1" 10 $node]
 
 [shell pg_1]
     [invoke log "Insert a row on PG side"]
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/03.06_node_satellite_does_sync_on_subscribe.lux dart/tests/03.06_node_satellite_does_sync_on_subscribe.lux
--- electric/tests/03.06_node_satellite_does_sync_on_subscribe.lux	2023-09-20 00:59:33.952067780 +0200
+++ dart/tests/03.06_node_satellite_does_sync_on_subscribe.lux	2023-09-20 16:36:33.962041749 +0200
@@ -24,7 +24,7 @@
     -$fail_pattern
     [invoke node_sync_table "items"]
     # As soon as sync is done, we expect to see the row in the database
-    !await client.get_items(db)
+    !get_items db
     ??hello from pg
 
 [shell pg_1]
@@ -35,7 +35,7 @@
 [shell satellite_1]
     # This one gets propagated "normally"
     [invoke node_await_get "00000000-0000-0000-0000-000000000001"]
-    !await client.delete_item(db, ['hello from pg again'])
+    !delete_item db ['hello from pg again']
     ?$node
 
 [shell pg_1]
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/03.07_node_satellite_can_delete_freshly_synced_rows.lux dart/tests/03.07_node_satellite_can_delete_freshly_synced_rows.lux
--- electric/tests/03.07_node_satellite_can_delete_freshly_synced_rows.lux	2023-09-20 00:59:33.952067780 +0200
+++ dart/tests/03.07_node_satellite_can_delete_freshly_synced_rows.lux	2023-09-20 16:36:33.962041749 +0200
@@ -28,9 +28,9 @@
     -$fail_pattern
     [invoke node_sync_table "items"]
     # As soon as sync it done, we expect to see the row in the database
-    !await client.get_items(db)
+    !get_items db
     ??hello from pg
-    !await client.delete_item(db, ['hello from pg'])
+    !delete_item db ['hello from pg']
     ?$node
 
 [shell pg_1]
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/03.08_node_satellite_can_resume_subscriptions_on_reconnect.lux dart/tests/03.08_node_satellite_can_resume_subscriptions_on_reconnect.lux
--- electric/tests/03.08_node_satellite_can_resume_subscriptions_on_reconnect.lux	2023-09-20 00:59:33.952067780 +0200
+++ dart/tests/03.08_node_satellite_can_resume_subscriptions_on_reconnect.lux	2023-09-20 16:36:33.962041749 +0200
@@ -24,7 +24,7 @@
     -$fail_pattern
     [invoke node_sync_table "items"]
     # As soon as sync is done, we expect to see the row in the database
-    !await client.get_items(db)
+    !get_items db
     ??hello from pg
 
 [shell pg_1]
@@ -35,7 +35,7 @@
 [shell satellite_1]
     # This one gets propagated "normally"
     [invoke node_await_get "00000000-0000-0000-0000-000000000001"]
-    !await client.delete_item(db, ['hello from pg again'])
+    !delete_item db ['hello from pg again']
     ?$node
 
 [shell pg_1]
@@ -44,7 +44,7 @@
 
 [shell satellite_1]
     [progress stopping client]
-    !await client.stop(db)
+    !stop db
     ?$node
     [progress resuming client]
     [invoke electrify_db "originalDb" "electric_1" 5133 "[]"]
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/03.10_node_satellite_can_resume_replication_on_reconnect.lux dart/tests/03.10_node_satellite_can_resume_replication_on_reconnect.lux
--- electric/tests/03.10_node_satellite_can_resume_replication_on_reconnect.lux	2023-09-20 00:59:33.952067780 +0200
+++ dart/tests/03.10_node_satellite_can_resume_replication_on_reconnect.lux	2023-09-20 16:36:33.962041749 +0200
@@ -24,7 +24,7 @@
   ?\[proto\] recv: #SatOpLog\{.*#Migrate\{vsn: $migration2_vsn, for: bar
 
   [progress stopping client]
-  !await client.stop(db)
+  !stop db
   ?$node
 
   # Verify that the client retrieves previously stored LSN when it reestablishes the replication connection.
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/03.11_node_satellite_compensations_work.lux dart/tests/03.11_node_satellite_compensations_work.lux
--- electric/tests/03.11_node_satellite_compensations_work.lux	2023-09-20 00:59:33.952067780 +0200
+++ dart/tests/03.11_node_satellite_compensations_work.lux	2023-09-20 16:36:33.962041749 +0200
@@ -34,22 +34,17 @@
     [invoke node_await_table "other_items"]
     [invoke node_sync_table "other_items"]
     ??[proto] recv: #SatSubsDataEnd
-    !await db.db.raw({sql: "UPDATE _electric_meta SET value = 1 WHERE key = 'compensations' RETURNING *"})
+    !raw_statement db "UPDATE _electric_meta SET value = 1 WHERE key = 'compensations' RETURNING *"
     ?$node
 
-    """!await db.db.items.create({
-      data: {
-        id: "test_id_1",
-        content: "hello world"
-      }
-    })
-    """
+    [invoke node_await_insert_extended "{id: 'test_id_1', content: 'hello world'}"]
+    ?$node
     ??[proto] send: #SatOpLog
     ??[proto] recv: #SatOpLog
 
 # TEST:
     # Disconnect the client
-    !db.notifier.connectivityStateChanged(db.notifier.dbName, 'disconnected')
+    !change_connectivity db 'disconnected'
 
 [shell pg_1]
     # Concurrently, update and then delete the referenced row on the server
@@ -59,20 +54,13 @@
 [shell satellite_1]
     # On a disconnected client, insert a dependent row
     ?$node
-    """!await db.db.other_items.create({
-      data: {
-        id: "other_test_id_1",
-        content: "",
-        item_id: "test_id_1"
-      }
-    })
-    """
+    !raw_statement db "INSERT INTO other_items(id, content, item_id) VALUES('other_test_id_1', '', 'test_id_1')"
     ?$node
 
 
 [shell satellite_1]
     # Reconnect the client, expecting no errors to show up
-    !db.notifier.connectivityStateChanged(db.notifier.dbName, 'available')
+    !change_connectivity db 'available'
     ??[proto] send: #SatOpLog
     ??[proto] recv: #SatOpLog
 
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/03.12_server_correctly_continues_the_replication.lux dart/tests/03.12_server_correctly_continues_the_replication.lux
--- electric/tests/03.12_server_correctly_continues_the_replication.lux	2023-09-20 00:59:33.952067780 +0200
+++ dart/tests/03.12_server_correctly_continues_the_replication.lux	2023-09-20 16:36:33.962041749 +0200
@@ -48,7 +48,7 @@
 
 [shell satellite_1]
   [progress stopping client 1]
-  !await client.stop(db)
+  !stop db
   ?$node
 
   # Verify that the client retrieves previously stored LSN when it reestablishes the replication connection.
@@ -75,7 +75,7 @@
 
 [shell satellite_2]
   [progress stopping client 2]
-  !await client.stop(db)
+  !stop db
   ?$node
 
   # Verify that the client retrieves previously stored LSN when it reestablishes the replication connection.
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/03.13_node_satellite_can_sync_timestamps.lux dart/tests/03.13_node_satellite_can_sync_timestamps.lux
--- electric/tests/03.13_node_satellite_can_sync_timestamps.lux	2023-09-20 00:59:33.952067780 +0200
+++ dart/tests/03.13_node_satellite_can_sync_timestamps.lux	2023-09-20 00:55:00.713148707 +0200
@@ -29,7 +29,7 @@
 [shell satellite_1]
     [invoke node_await_get_from_table "timestamps" "00000000-0000-0000-0000-000000000001"]
 
-    !await client.get_rows(db, "timestamps")
+    !get_rows db "timestamps"
     ?created_at: '([0-9-]{10} [0-9:]{8}\.[0-9]+)'
     [global created_at=$1]
     ?updated_at: '([0-9-]{10} [0-9:]{8}\.[0-9]+)Z'
@@ -45,7 +45,7 @@
 [shell satellite_1]
     [invoke node_await_get_from_table "timestamps" "00000000-0000-0000-0000-000000000002"]
 
-    !await client.get_rows(db, "timestamps")
+    !get_rows db "timestamps"
     ??created_at: '2023-08-23 09:10:11'
     ??updated_at: '2023-08-23 09:10:11.001Z'
 
@@ -68,7 +68,7 @@
 
     [invoke node_await_get_from_table "timestamps" "00000000-0000-0000-0000-000000000003"]
 
-    !await client.get_rows(db, "timestamps")
+    !get_rows db "timestamps"
     ??id: '00000000-0000-0000-0000-000000000001'
     ??created_at: '$created_at'
     ??updated_at: '${updated_at}Z'
Only in electric/tests: 05.06_postgres_trigger_column_name_quoting_regression_test.lux
diff -x lux -x satellite_client -x lux_logs -ur electric/tests/_satellite_macros.luxinc dart/tests/_satellite_macros.luxinc
--- electric/tests/_satellite_macros.luxinc	2023-09-20 00:59:33.953067784 +0200
+++ dart/tests/_satellite_macros.luxinc	2023-09-20 00:55:00.713148707 +0200
@@ -1,23 +1,20 @@
 [global node=>]
 
 [macro connect_to_electric host port migrations]
-    !client = await import('./dist/client.js')
-    ?$node
     # !migrations = await client.read_migrations(process.env.MIGRATION_DIRS + "/index.js")
     # ?$node
     !migrations = $migrations
     ?$node
-    !originalDb = client.make_db(process.env.SATELLITE_DB_PATH + "/$LUX_SHELLNAME")
+    !shell_db_path = get_shell_db_path "$LUX_SHELLNAME"
+    ?$node
+    !originalDb = make_db shell_db_path
     ?$node
     [invoke electrify_db "originalDb" $host $port $migrations]
     ??(in electrify_db) config:
 [endmacro]
 
 [macro electrify_db db host port migrations]
-     !db = await client.electrify_db(originalDb, \
-                                     "$host", \
-                                     $port, \
-                                     $migrations)
+    !db = electrify_db originalDb "$host" $port $migrations
 [endmacro]
 
 [macro setup_client_with_migrations satellite_number electric port migrations]
@@ -32,49 +29,49 @@
 [endmacro]
 
 [macro node_await_get match]
-    [invoke wait-for "await client.get_items(db)" "${match}" 10 $node]
+    [invoke wait-for "get_items db" "${match}" 10 $node]
 [endmacro]
 
 [macro node_await_get_from_table table match]
-    [invoke wait-for "await client.get_rows(db, '${table}')" "${match}" 10 $node]
+    [invoke wait-for "get_rows db '${table}'"  "${match}" 10 $node]
 [endmacro]
 
 [macro node_await_table match]
-    [invoke wait-for "await client.get_tables(db)" "${match}" 10 $node]
+    [invoke wait-for "get_tables db" "${match}" 10 $node]
 [endmacro]
 
 [macro node_await_column table column]
-    [invoke wait-for "await client.get_columns(db, '${table}')" "${column}" 10 $node]
+    [invoke wait-for "get_columns db '${table}'" "${column}" 10 $node]
 [endmacro]
 
 [macro node_await_column_value table column value]
-    [invoke wait-for "await client.get_item_columns(db, '${table}', '${column}')" $value 10 $node]
+    [invoke wait-for "get_item_columns db '${table}' '${column}'" $value 10 $node]
 [endmacro]
 
 [macro node_await_insert keys]
-    !await client.insert_item(db, ${keys})
+    !insert_item db ${keys}
     ?$node
 [endmacro]
 
 [macro node_await_insert_extended keys]
-    !await client.insert_extended_item(db, ${keys})
+    !insert_extended_item db ${keys}
     ?$node
 [endmacro]
 
 [macro node_await_insert_extended_into table keys]
-    !await client.insert_extended_into(db, '${table}', ${keys})
+    !insert_extended_into db '${table}' ${keys}
     ?$node
 [endmacro]
 
 [macro node_await_get_other match]
-    [invoke wait-for "client.get_other_items(db)" "${match}" 10 $node]
+    [invoke wait-for "get_other_items db" "${match}" 10 $node]
 [endmacro]
 
 [macro node_await_insert_other keys]
-    !client.insert_other_item(db, ${keys})
+    !insert_other_item db ${keys}
     ?$node
 [endmacro]
 
 [macro node_sync_table table]
-    !await client.syncTable(db, "${table}")
+    !sync_table db "${table}"
 [endmacro]
