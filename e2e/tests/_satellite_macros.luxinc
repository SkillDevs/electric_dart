[global node=>]

[macro connect_to_electric host port migrations]
    # !migrations = await client.read_migrations(process.env.MIGRATION_DIRS + "/index.js")
    # ?$node
    !migrations = $migrations
    ??$node
    !shell_db_path = get_shell_db_path "$LUX_SHELLNAME"
    ??$node
    !originalDb = make_db shell_db_path
    ??$node
    [invoke electrify_db "originalDb" $host $port $migrations]
    ??(in electrify_db) config:
[endmacro]

[macro electrify_db db host port migrations]
    !db = electrify_db originalDb "$host" $port $migrations
[endmacro]

[macro setup_client_with_migrations satellite_number electric port migrations]
    [invoke start_satellite $satellite_number]
    -$fail_pattern
    ??$node
    [invoke connect_to_electric $electric $port $migrations]
[endmacro]

[macro setup_client satellite_number electric port]
    [invoke setup_client_with_migrations $satellite_number $electric $port "[]"]
[endmacro]

[macro node_await_get match]
    [invoke wait-for "get_items db" "${match}" 10 $node]
[endmacro]

[macro node_await_get_from_table table match]
    [invoke wait-for "get_rows db '${table}'" "${match}" 10 $node]
[endmacro]

[macro node_await_get_bool id expected_bool]
    [invoke wait-for "get_bool db '${id}'" "${expected_bool}" 10 $node]
[endmacro]

[macro node_await_get_uuid id]
    [invoke wait-for "get_uuid db '${id}'" "${id}" 10 $node]
[endmacro]

[macro node_await_get_int id]
    [invoke wait-for "get_int db '${id}'" "${id}" 10 $node]
[endmacro]

[macro node_await_get_float id]
    [invoke wait-for "get_float db '${id}'" "${id}" 10 $node]
[endmacro]

[macro node_write_float id f4_value f8_value]
    # Can write valid floats to the DB
    !write_float db '${id}' ${f4_value} ${f8_value}
    ??{ id: '${id}',
    ??$node
[endmacro]

[macro node_get_uuid id]
    !get_uuid db '${id}'
    ??{ id: '${id}' }
    ??$node
[endmacro]

[macro node_get_int id expected_int2 expected_int4]
    !get_int db '${id}'
    ??{ id: '${id}', i2: ${expected_int2}, i4: ${expected_int4} }
    ??$node
[endmacro]

[macro node_get_float id expected_float4 expected_float8]
    !get_float db '${id}'
    ??{ id: '${id}', f4: ${expected_float4}, f8: ${expected_float8} }
    ??$node
[endmacro]

[macro node_await_get_timestamps match]
    [invoke wait-for "get_timestamps db" "${match}" 10 $node]
[endmacro]

[macro node_await_assert_timestamp id timestamp timestamptz]
    [invoke wait-for "assert_timestamp db '${id}' '${timestamp}' '${timestamptz}'" "true" 10 $node]
[endmacro]

[macro node_await_assert_datetime id date time]
    [invoke wait-for "assert_datetime db '${id}' '${date}' '${time}'" "true" 10 $node]
[endmacro]

[macro node_await_table match]
    [invoke wait-for "get_tables db" "${match}" 10 $node]
[endmacro]

[macro node_await_column table column]
    [invoke wait-for "get_columns db '${table}'" "${column}" 10 $node]
[endmacro]

[macro node_await_column_value table column value]
    [invoke wait-for "get_item_columns db '${table}' '${column}'" $value 10 $node]
[endmacro]

[macro node_await_insert keys]
    !insert_item db ${keys}
    ??$node
[endmacro]

[macro node_await_insert_extended keys]
    !insert_extended_item db ${keys}
    ??$node
[endmacro]

[macro node_await_insert_extended_into table keys]
    !insert_extended_into db '${table}' ${keys}
    ??$node
[endmacro]

[macro node_await_get_other match]
    [invoke wait-for "get_other_items db" "${match}" 10 $node]
[endmacro]

[macro node_await_insert_other keys]
    !insert_other_item db ${keys}
    ??$node
[endmacro]

[macro node_sync_table table]
    !sync_table db "${table}"
[endmacro]
